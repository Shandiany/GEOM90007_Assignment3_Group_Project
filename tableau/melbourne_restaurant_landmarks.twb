<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0912.2314                               -->
<workbook original-version='18.1' source-build='2025.2.3 (20252.25.0912.2314)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='melbourne_restaurant_landmarks' path='/workbooks' revision='1.6' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='landmarks_restaurants+' inline='true' name='federated.0dudxf80jcq2u31emq2321tgphwg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='landmarks_restaurants' name='textscan.1iz6wy80gq3qsg1fdbv010wmpv0y'>
            <connection class='textscan' directory='E:/UoM_MIT/25 S2/Information_Visualisation/iv_assignment3/restaurant_landmarks' filename='landmarks_restaurants.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.1iz6wy80gq3qsg1fdbv010wmpv0y' name='landmarks_restaurants.csv' table='[landmarks_restaurants#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
              <column datatype='string' name='Name' ordinal='0' />
              <column datatype='string' name='Type' ordinal='1' />
              <column datatype='string' name='SubType' ordinal='2' />
              <column datatype='string' name='Suburb' ordinal='3' />
              <column datatype='real' name='Rating' ordinal='4' />
              <column datatype='string' name='PriceLevel' ordinal='5' />
              <column datatype='integer' name='RankingPosition' ordinal='6' />
              <column datatype='string' name='Address' ordinal='7' />
              <column datatype='real' name='Latitude' ordinal='8' />
              <column datatype='real' name='Longitude' ordinal='9' />
              <column datatype='integer' name='NumberOfReviews' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.1iz6wy80gq3qsg1fdbv010wmpv0y' name='pedestrian_monthly_by_suburb.csv' table='[pedestrian_monthly_by_suburb#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
              <column datatype='string' name='Suburb' ordinal='0' />
              <column datatype='date' date-parse-format='yyyy-MM' name='Month' ordinal='1' />
              <column datatype='real' name='HourlyPedestrians' ordinal='2' />
              <column datatype='integer' name='Path' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Address]' value='[landmarks_restaurants.csv].[Address]' />
          <map key='[HourlyPedestrians]' value='[pedestrian_monthly_by_suburb.csv].[HourlyPedestrians]' />
          <map key='[Latitude]' value='[landmarks_restaurants.csv].[Latitude]' />
          <map key='[Longitude]' value='[landmarks_restaurants.csv].[Longitude]' />
          <map key='[Month]' value='[pedestrian_monthly_by_suburb.csv].[Month]' />
          <map key='[Name]' value='[landmarks_restaurants.csv].[Name]' />
          <map key='[NumberOfReviews]' value='[landmarks_restaurants.csv].[NumberOfReviews]' />
          <map key='[Path]' value='[pedestrian_monthly_by_suburb.csv].[Path]' />
          <map key='[PriceLevel]' value='[landmarks_restaurants.csv].[PriceLevel]' />
          <map key='[RankingPosition]' value='[landmarks_restaurants.csv].[RankingPosition]' />
          <map key='[Rating]' value='[landmarks_restaurants.csv].[Rating]' />
          <map key='[SubType]' value='[landmarks_restaurants.csv].[SubType]' />
          <map key='[Suburb (pedestrian_monthly_by_suburb.csv)]' value='[pedestrian_monthly_by_suburb.csv].[Suburb]' />
          <map key='[Suburb]' value='[landmarks_restaurants.csv].[Suburb]' />
          <map key='[Type]' value='[landmarks_restaurants.csv].[Type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[landmarks_restaurants.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pedestrian_monthly_by_suburb.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[landmarks_restaurants.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[landmarks_restaurants.csv]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SubType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SubType]</local-name>
            <parent-name>[landmarks_restaurants.csv]</parent-name>
            <remote-alias>SubType</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Suburb</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Suburb]</local-name>
            <parent-name>[landmarks_restaurants.csv]</parent-name>
            <remote-alias>Suburb</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rating]</local-name>
            <parent-name>[landmarks_restaurants.csv]</parent-name>
            <remote-alias>Rating</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PriceLevel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PriceLevel]</local-name>
            <parent-name>[landmarks_restaurants.csv]</parent-name>
            <remote-alias>PriceLevel</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RankingPosition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RankingPosition]</local-name>
            <parent-name>[landmarks_restaurants.csv]</parent-name>
            <remote-alias>RankingPosition</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[landmarks_restaurants.csv]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[landmarks_restaurants.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[landmarks_restaurants.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumberOfReviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NumberOfReviews]</local-name>
            <parent-name>[landmarks_restaurants.csv]</parent-name>
            <remote-alias>NumberOfReviews</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Suburb</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Suburb (pedestrian_monthly_by_suburb.csv)]</local-name>
            <parent-name>[pedestrian_monthly_by_suburb.csv]</parent-name>
            <remote-alias>Suburb</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[pedestrian_monthly_by_suburb.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HourlyPedestrians</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HourlyPedestrians]</local-name>
            <parent-name>[pedestrian_monthly_by_suburb.csv]</parent-name>
            <remote-alias>HourlyPedestrians</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Path</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Path]</local-name>
            <parent-name>[pedestrian_monthly_by_suburb.csv]</parent-name>
            <remote-alias>Path</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CategoryGroup' datatype='string' name='[Calculation_2226748609236152320]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS(LOWER([Type]), &quot;restaurant&quot;) THEN &quot;Restaurant&quot;&#13;&#10;ELSE &quot;Attraction&quot;&#13;&#10;END' />
      </column>
      <column caption='Rank by Suburb' datatype='integer' name='[Calculation_3399654837274361856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE(&#13;&#10;    AVG([Rating])&#13;&#10;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Edges' datatype='integer' name='[Calculation_3491697154640367616]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Angle' datatype='real' name='[Calculation_3491697154640621569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_3491697154640367616]-1)*(2*PI()/WINDOW_MAX([Calculation_3491697154640367616]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Count' datatype='integer' name='[Calculation_3491697154640744450]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Number of Slices' datatype='integer' name='[Calculation_3491697154640822275]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX([Calculation_3491697154640744450])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Radius' datatype='real' name='[Calculation_3491697154642329604]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SQRT(AVG([HourlyPedestrians])/PI())' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_3491697154642485253]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='X' datatype='real' name='[Calculation_3491697154642522118]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Calculation_3491697154642485253]=1 OR[Calculation_3491697154642485253]=WINDOW_MAX([Calculation_3491697154642485253]),0,WINDOW_MAX([Calculation_3491697154642329604])&#13;&#10;&#13;&#10;*COS([Calculation_3491697154640621569]+((([Calculation_3491697154642485253]-2)*WINDOW_MAX(2*PI())/([Calculation_3491697154640822275]*99)))))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Y' datatype='real' name='[Calculation_3491697154642599943]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Calculation_3491697154642485253]=1 OR[Calculation_3491697154642485253]=WINDOW_MAX([Calculation_3491697154642485253]),0,WINDOW_MAX([Calculation_3491697154642329604])&#13;&#10;&#13;&#10;*SIN([Calculation_3491697154640621569]+((([Calculation_3491697154642485253]-2)*WINDOW_MAX(2*PI())/([Calculation_3491697154640822275]*99)))))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Hourly Pedestrians' datatype='real' name='[HourlyPedestrians]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='date' datatype-customized='true' name='[Month]' role='dimension' type='ordinal' />
      <column caption='Number Of Reviews' datatype='integer' name='[NumberOfReviews]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Path (bin)' datatype='integer' name='[Path (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Path]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Path]' role='measure' type='quantitative' />
      <column caption='Price Level' datatype='string' name='[PriceLevel]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Ranking Position' datatype='integer' name='[RankingPosition]' role='dimension' type='ordinal' />
      <column caption='Sub Type' datatype='string' name='[SubType]' role='dimension' type='nominal' />
      <column caption='Suburb (pedestrian monthly by suburb.csv)' datatype='string' name='[Suburb (pedestrian_monthly_by_suburb.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Type]' role='dimension' type='nominal' />
      <column caption='landmarks_restaurants.csv' datatype='table' name='[__tableau_internal_object_id__].[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]' role='measure' type='quantitative' />
      <column caption='pedestrian_monthly_by_suburb.csv' datatype='table' name='[__tableau_internal_object_id__].[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]' role='measure' type='quantitative' />
      <column-instance column='[Suburb (pedestrian_monthly_by_suburb.csv)]' derivation='None' name='[none:Suburb (pedestrian_monthly_by_suburb.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
      <group caption='Action (Path (bin),Suburb (pedestrian monthly by suburb.csv))' hidden='true' name='[Action (Path (bin),Suburb (pedestrian monthly by suburb.csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Path (bin)]' />
          <groupfilter function='level-members' level='[Suburb (pedestrian_monthly_by_suburb.csv)]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='E:/UoM_MIT/25 S2/Information_Visualisation/iv_assignment3/restaurant_landmarks/landmarks_restaurants+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/27/2025 02:03:37 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60' table='[Extract].[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]' type='table' />
            <relation name='pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E' table='[Extract].[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]' type='table' />
          </relation>
          <cols>
            <map key='[Address]' value='[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60].[Address]' />
            <map key='[HourlyPedestrians]' value='[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E].[HourlyPedestrians]' />
            <map key='[Latitude]' value='[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60].[Latitude]' />
            <map key='[Longitude]' value='[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60].[Longitude]' />
            <map key='[Month]' value='[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E].[Month]' />
            <map key='[Name]' value='[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60].[Name]' />
            <map key='[NumberOfReviews]' value='[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60].[NumberOfReviews]' />
            <map key='[Path]' value='[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E].[Path]' />
            <map key='[PriceLevel]' value='[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60].[PriceLevel]' />
            <map key='[RankingPosition]' value='[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60].[RankingPosition]' />
            <map key='[Rating]' value='[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60].[Rating]' />
            <map key='[SubType]' value='[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60].[SubType]' />
            <map key='[Suburb (pedestrian_monthly_by_suburb.csv)]' value='[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E].[Suburb]' />
            <map key='[Suburb]' value='[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60].[Suburb]' />
            <map key='[Type]' value='[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60].[Type]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='landmarks_restaurants+' increment-value='%null%' refresh-type='create' rows-inserted='923' timestamp-start='2025-10-27 14:03:37.340' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name]</local-name>
              <parent-name>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</parent-name>
              <remote-alias>Name</remote-alias>
              <ordinal>0</ordinal>
              <family>landmarks_restaurants.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>711</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Type]</local-name>
              <parent-name>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</parent-name>
              <remote-alias>Type</remote-alias>
              <ordinal>1</ordinal>
              <family>landmarks_restaurants.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SubType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SubType]</local-name>
              <parent-name>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</parent-name>
              <remote-alias>SubType</remote-alias>
              <ordinal>2</ordinal>
              <family>landmarks_restaurants.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Suburb</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Suburb]</local-name>
              <parent-name>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</parent-name>
              <remote-alias>Suburb</remote-alias>
              <ordinal>3</ordinal>
              <family>landmarks_restaurants.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>29</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rating</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Rating]</local-name>
              <parent-name>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</parent-name>
              <remote-alias>Rating</remote-alias>
              <ordinal>4</ordinal>
              <family>landmarks_restaurants.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PriceLevel</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PriceLevel]</local-name>
              <parent-name>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</parent-name>
              <remote-alias>PriceLevel</remote-alias>
              <ordinal>5</ordinal>
              <family>landmarks_restaurants.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RankingPosition</remote-name>
              <remote-type>20</remote-type>
              <local-name>[RankingPosition]</local-name>
              <parent-name>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</parent-name>
              <remote-alias>RankingPosition</remote-alias>
              <ordinal>6</ordinal>
              <family>landmarks_restaurants.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>394</approx-count>
              <contains-null>true</contains-null>
              <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Address]</local-name>
              <parent-name>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</parent-name>
              <remote-alias>Address</remote-alias>
              <ordinal>7</ordinal>
              <family>landmarks_restaurants.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>476</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>8</ordinal>
              <family>landmarks_restaurants.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>701</approx-count>
              <contains-null>true</contains-null>
              <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>9</ordinal>
              <family>landmarks_restaurants.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>697</approx-count>
              <contains-null>true</contains-null>
              <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NumberOfReviews</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NumberOfReviews]</local-name>
              <parent-name>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</parent-name>
              <remote-alias>NumberOfReviews</remote-alias>
              <ordinal>10</ordinal>
              <family>landmarks_restaurants.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>345</approx-count>
              <contains-null>true</contains-null>
              <object-id>[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Suburb</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Suburb (pedestrian_monthly_by_suburb.csv)]</local-name>
              <parent-name>[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]</parent-name>
              <remote-alias>Suburb</remote-alias>
              <ordinal>11</ordinal>
              <family>pedestrian_monthly_by_suburb.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>12</ordinal>
              <family>pedestrian_monthly_by_suburb.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HourlyPedestrians</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HourlyPedestrians]</local-name>
              <parent-name>[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]</parent-name>
              <remote-alias>HourlyPedestrians</remote-alias>
              <ordinal>13</ordinal>
              <family>pedestrian_monthly_by_suburb.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>101</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Path</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Path]</local-name>
              <parent-name>[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]</parent-name>
              <remote-alias>Path</remote-alias>
              <ordinal>14</ordinal>
              <family>pedestrian_monthly_by_suburb.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='721' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Suburb (pedestrian_monthly_by_suburb.csv):nk]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#26897e'>
              <bucket>&quot;Southbank&quot;</bucket>
            </map>
            <map to='#3ca8bc'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;South Wharf&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Docklands&quot;</bucket>
            </map>
            <map to='#8dbfa8'>
              <bucket>&quot;West Melbourne&quot;</bucket>
            </map>
            <map to='#94a323'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;North Melbourne&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;East Melbourne&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Kensington&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Type:nk]' type='shape'>
            <map to='MyCustom1/Church.png'>
              <bucket>&quot;Place Of Assembly&quot;</bucket>
            </map>
            <map to='MyCustom1/Church.png'>
              <bucket>&quot;Place of Worship&quot;</bucket>
            </map>
            <map to='MyCustom1/hospital.png'>
              <bucket>&quot;Health Services&quot;</bucket>
            </map>
            <map to='MyCustom1/leisure.png'>
              <bucket>&quot;Community Use&quot;</bucket>
            </map>
            <map to='MyCustom1/leisure.png'>
              <bucket>&quot;Leisure/Recreation&quot;</bucket>
            </map>
            <map to='MyCustom1/mixeduse.png'>
              <bucket>&quot;Industrial&quot;</bucket>
            </map>
            <map to='MyCustom1/mixeduse.png'>
              <bucket>&quot;Mixed Use&quot;</bucket>
            </map>
            <map to='MyCustom1/mixeduse.png'>
              <bucket>&quot;Vacant Land&quot;</bucket>
            </map>
            <map to='MyCustom1/office.png'>
              <bucket>&quot;Office&quot;</bucket>
            </map>
            <map to='MyCustom1/residential.png'>
              <bucket>&quot;Residential Accommodation&quot;</bucket>
            </map>
            <map to='MyCustom1/residential.png'>
              <bucket>&quot;Specialist Residential Accommodation&quot;</bucket>
            </map>
            <map to='MyCustom1/restaurant.png'>
              <bucket>&quot;Restaurant&quot;</bucket>
            </map>
            <map to='MyCustom1/retail.png'>
              <bucket>&quot;Retail&quot;</bucket>
            </map>
            <map to='MyCustom1/retail.png'>
              <bucket>&quot;Warehouse/Store&quot;</bucket>
            </map>
            <map to='MyCustom1/school.png'>
              <bucket>&quot;Education Centre&quot;</bucket>
            </map>
            <map to='MyCustom1/school.png'>
              <bucket>&quot;Purpose Built&quot;</bucket>
            </map>
            <map to='MyCustom1/transport.png'>
              <bucket>&quot;Transport&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Suburb (pedestrian_monthly_by_suburb.csv)' />
        <field-sort-custom-order field='Month' />
        <field-sort-custom-order field='HourlyPedestrians' />
        <field-sort-custom-order field='Path' />
        <field-sort-custom-order field='Calculation_3491697154640367616' />
        <field-sort-custom-order field='Path (bin)' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='landmarks_restaurants.csv' id='landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60'>
            <properties context=''>
              <relation connection='textscan.1iz6wy80gq3qsg1fdbv010wmpv0y' name='landmarks_restaurants.csv' table='[landmarks_restaurants#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
                  <column datatype='string' name='Name' ordinal='0' />
                  <column datatype='string' name='Type' ordinal='1' />
                  <column datatype='string' name='SubType' ordinal='2' />
                  <column datatype='string' name='Suburb' ordinal='3' />
                  <column datatype='real' name='Rating' ordinal='4' />
                  <column datatype='string' name='PriceLevel' ordinal='5' />
                  <column datatype='integer' name='RankingPosition' ordinal='6' />
                  <column datatype='string' name='Address' ordinal='7' />
                  <column datatype='real' name='Latitude' ordinal='8' />
                  <column datatype='real' name='Longitude' ordinal='9' />
                  <column datatype='integer' name='NumberOfReviews' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60' table='[Extract].[landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60]' type='table' />
            </properties>
          </object>
          <object caption='pedestrian_monthly_by_suburb.csv' id='pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E'>
            <properties context=''>
              <relation connection='textscan.1iz6wy80gq3qsg1fdbv010wmpv0y' name='pedestrian_monthly_by_suburb.csv' table='[pedestrian_monthly_by_suburb#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
                  <column datatype='string' name='Suburb' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyy-MM' name='Month' ordinal='1' />
                  <column datatype='real' name='HourlyPedestrians' ordinal='2' />
                  <column datatype='integer' name='Path' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E' table='[Extract].[pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Suburb]' />
              <expression op='[Suburb (pedestrian_monthly_by_suburb.csv)]' />
            </expression>
            <first-end-point object-id='landmarks_restaurants.csv_099F67B7FE9144A9B49F65C543F13E60' />
            <second-end-point object-id='pedestrian_monthly_by_suburb.csv_E2BE5B6F99DC44D09C80313B651DF12E' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0dudxf80jcq2u31emq2321tgphwg'>
      <datasources>
        <datasource caption='landmarks_restaurants+' name='federated.0dudxf80jcq2u31emq2321tgphwg' />
      </datasources>
      <datasource-dependencies datasource='federated.0dudxf80jcq2u31emq2321tgphwg'>
        <column datatype='string' name='[Suburb]' role='dimension' type='nominal' />
        <column-instance column='[Suburb]' derivation='None' name='[none:Suburb:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Albert Park&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Bentleigh&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Brighton&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Brunswick&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Carlton&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Carlton North&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Collingwood&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Docklands&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;East Melbourne&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Fitzroy&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Flemington&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Footscray&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Hawthorn&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Kensington&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Kew&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Melbourne&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Moonee Ponds&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;North Melbourne&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Parkville&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Port Melbourne&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Prahran&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Richmond&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;South Melbourne&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;South Wharf&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;South Yarra&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Southbank&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;St Kilda&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;West Melbourne&quot;' />
          <groupfilter function='member' level='[none:Suburb:nk]' member='&quot;Windsor&quot;' />
        </groupfilter>
        <target field='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_7B2B2A51329C41FEA42D8AE1070C3E21]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Pedestrain' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Find Top 10 Restaurants'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#499894' fontname='Cambria' fontsize='16'>Find The Top Restaurants</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='landmarks_restaurants+' name='federated.0dudxf80jcq2u31emq2321tgphwg' />
          </datasources>
          <datasource-dependencies datasource='federated.0dudxf80jcq2u31emq2321tgphwg'>
            <column datatype='string' name='[Address]' role='dimension' type='nominal' />
            <column caption='CategoryGroup' datatype='string' name='[Calculation_2226748609236152320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(LOWER([Type]), &quot;restaurant&quot;) THEN &quot;Restaurant&quot;&#13;&#10;ELSE &quot;Attraction&quot;&#13;&#10;END' />
            </column>
            <column caption='Rank by Suburb' datatype='integer' name='[Calculation_3399654837274361856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE(&#13;&#10;    AVG([Rating])&#13;&#10;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[NumberOfReviews]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Path (bin)' datatype='integer' name='[Path (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Path]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[Path]' role='measure' type='quantitative' />
            <column caption='Price Level' datatype='string' name='[PriceLevel]' role='dimension' type='nominal' />
            <column datatype='real' name='[Rating]' role='measure' type='quantitative' />
            <column caption='Suburb (pedestrian monthly by suburb.csv)' datatype='string' name='[Suburb (pedestrian_monthly_by_suburb.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Suburb]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Address]' derivation='Attribute' name='[attr:Address:nk]' pivot='key' type='nominal' />
            <column-instance column='[PriceLevel]' derivation='Attribute' name='[attr:PriceLevel:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2226748609236152320]' derivation='None' name='[none:Calculation_2226748609236152320:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Suburb]' derivation='None' name='[none:Suburb:nk]' pivot='key' type='nominal' />
            <column-instance column='[NumberOfReviews]' derivation='Sum' name='[sum:NumberOfReviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rating]' derivation='Sum' name='[sum:Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3399654837274361856]' derivation='User' name='[usr:Calculation_3399654837274361856:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dudxf80jcq2u31emq2321tgphwg].[Action (Path (bin),Suburb (pedestrian monthly by suburb.csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_7B2B2A51329C41FEA42D8AE1070C3E21]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Path (bin)]' />
              <groupfilter function='level-members' level='[Suburb (pedestrian_monthly_by_suburb.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2226748609236152320:nk]' member='&quot;Attraction&quot;' />
              <groupfilter function='member' level='[none:Calculation_2226748609236152320:nk]' member='&quot;Restaurant&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Name:nk]' direction='DESC' using='[federated.0dudxf80jcq2u31emq2321tgphwg].[sum:Rating:qk]' />
          <filter class='quantitative' column='[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3399654837274361856:qk]' included-values='in-range'>
            <min>1</min>
            <max>5</max>
          </filter>
          <slices>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3399654837274361856:qk]</column>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]</column>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[Action (Path (bin),Suburb (pedestrian monthly by suburb.csv))]</column>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0dudxf80jcq2u31emq2321tgphwg].[sum:Rating:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0dudxf80jcq2u31emq2321tgphwg].[attr:Address:nk]' />
              <tooltip column='[federated.0dudxf80jcq2u31emq2321tgphwg].[attr:PriceLevel:nk]' />
              <tooltip column='[federated.0dudxf80jcq2u31emq2321tgphwg].[sum:NumberOfReviews:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#86bcb6' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Name:nk]</rows>
        <cols>[federated.0dudxf80jcq2u31emq2321tgphwg].[sum:Rating:qk]</cols>
      </table>
      <simple-id uuid='{F6FB0828-CF06-4FD1-B52E-34064656F479}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#499894' fontname='Cambria' fontsize='16'>Attractions &amp; Restaurants Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='landmarks_restaurants+' name='federated.0dudxf80jcq2u31emq2321tgphwg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dudxf80jcq2u31emq2321tgphwg'>
            <column caption='CategoryGroup' datatype='string' name='[Calculation_2226748609236152320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(LOWER([Type]), &quot;restaurant&quot;) THEN &quot;Restaurant&quot;&#13;&#10;ELSE &quot;Attraction&quot;&#13;&#10;END' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Path (bin)' datatype='integer' name='[Path (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Path]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[Path]' role='measure' type='quantitative' />
            <column caption='Suburb (pedestrian monthly by suburb.csv)' datatype='string' name='[Suburb (pedestrian_monthly_by_suburb.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Suburb]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Suburb]' derivation='Attribute' name='[attr:Suburb:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2226748609236152320]' derivation='None' name='[none:Calculation_2226748609236152320:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Suburb]' derivation='None' name='[none:Suburb:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dudxf80jcq2u31emq2321tgphwg].[Action (Path (bin),Suburb (pedestrian monthly by suburb.csv))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_7B2B2A51329C41FEA42D8AE1070C3E21]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Path (bin)]' />
              <groupfilter function='level-members' level='[Suburb (pedestrian_monthly_by_suburb.csv)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_2226748609236152320:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]</column>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]</column>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[Action (Path (bin),Suburb (pedestrian monthly by suburb.csv))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dudxf80jcq2u31emq2321tgphwg].[avg:Longitude:qk]' field-type='quantitative' max='16140242.985683018' min='16135397.820143489' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dudxf80jcq2u31emq2321tgphwg].[avg:Latitude:qk]' field-type='quantitative' max='-4551051.1728562927' min='-4555554.900565478' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]' value='Category'>
              <formatted-text>
                <run>Category</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <shape column='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Type:nk]' />
              <lod column='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Name:nk]' />
              <tooltip column='[federated.0dudxf80jcq2u31emq2321tgphwg].[attr:Suburb:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Type:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Suburb:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dudxf80jcq2u31emq2321tgphwg].[attr:Suburb:nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0dudxf80jcq2u31emq2321tgphwg].[avg:Latitude:qk]</rows>
        <cols>[federated.0dudxf80jcq2u31emq2321tgphwg].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{38DB8F70-4C48-445F-998D-546E0DD6D3C9}' />
    </worksheet>
    <worksheet name='Pedestrain'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#499894' fontname='Cambria' fontsize='16'>Popular Suburbs at a Glance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='landmarks_restaurants+' name='federated.0dudxf80jcq2u31emq2321tgphwg' />
          </datasources>
          <datasource-dependencies datasource='federated.0dudxf80jcq2u31emq2321tgphwg'>
            <column caption='CategoryGroup' datatype='string' name='[Calculation_2226748609236152320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(LOWER([Type]), &quot;restaurant&quot;) THEN &quot;Restaurant&quot;&#13;&#10;ELSE &quot;Attraction&quot;&#13;&#10;END' />
            </column>
            <column caption='Edges' datatype='integer' name='[Calculation_3491697154640367616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Angle' datatype='real' name='[Calculation_3491697154640621569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_3491697154640367616]-1)*(2*PI()/WINDOW_MAX([Calculation_3491697154640367616]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Count' datatype='integer' name='[Calculation_3491697154640744450]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Number of Slices' datatype='integer' name='[Calculation_3491697154640822275]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX([Calculation_3491697154640744450])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Radius' datatype='real' name='[Calculation_3491697154642329604]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SQRT(AVG([HourlyPedestrians])/PI())' />
            </column>
            <column caption='Index' datatype='integer' name='[Calculation_3491697154642485253]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='X' datatype='real' name='[Calculation_3491697154642522118]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Calculation_3491697154642485253]=1 OR[Calculation_3491697154642485253]=WINDOW_MAX([Calculation_3491697154642485253]),0,WINDOW_MAX([Calculation_3491697154642329604])&#13;&#10;&#13;&#10;*COS([Calculation_3491697154640621569]+((([Calculation_3491697154642485253]-2)*WINDOW_MAX(2*PI())/([Calculation_3491697154640822275]*99)))))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Y' datatype='real' name='[Calculation_3491697154642599943]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Calculation_3491697154642485253]=1 OR[Calculation_3491697154642485253]=WINDOW_MAX([Calculation_3491697154642485253]),0,WINDOW_MAX([Calculation_3491697154642329604])&#13;&#10;&#13;&#10;*SIN([Calculation_3491697154640621569]+((([Calculation_3491697154642485253]-2)*WINDOW_MAX(2*PI())/([Calculation_3491697154640822275]*99)))))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Hourly Pedestrians' datatype='real' name='[HourlyPedestrians]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[Month]' role='dimension' type='ordinal' />
            <column aggregation='None' caption='Path (bin)' datatype='integer' name='[Path (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Path]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[Path]' role='measure' type='quantitative' />
            <column caption='Suburb (pedestrian monthly by suburb.csv)' datatype='string' name='[Suburb (pedestrian_monthly_by_suburb.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Suburb]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Month]' derivation='Month' name='[mn:Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2226748609236152320]' derivation='None' name='[none:Calculation_2226748609236152320:nk]' pivot='key' type='nominal' />
            <column-instance column='[Path (bin)]' derivation='None' name='[none:Path (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Suburb (pedestrian_monthly_by_suburb.csv)]' derivation='None' name='[none:Suburb (pedestrian_monthly_by_suburb.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Suburb]' derivation='None' name='[none:Suburb:nk]' pivot='key' type='nominal' />
            <column-instance column='[HourlyPedestrians]' derivation='Sum' name='[sum:HourlyPedestrians:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3491697154642522118]' derivation='User' name='[usr:Calculation_3491697154642522118:qk:19]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Path (bin)]' ordering-type='Field' />
              <table-calc field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Calculation_3491697154642485253]' ordering-field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Path (bin)]' ordering-type='Field' />
              <table-calc field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Calculation_3491697154640822275]' ordering-type='Field'>
                <order field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Path (bin)]' />
                <order field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Suburb (pedestrian_monthly_by_suburb.csv)]' />
              </table-calc>
              <table-calc field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Calculation_3491697154640621569]' ordering-field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Suburb (pedestrian_monthly_by_suburb.csv)]' ordering-type='Field' />
              <table-calc field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Calculation_3491697154640367616]' ordering-field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Suburb (pedestrian_monthly_by_suburb.csv)]' ordering-type='Field' />
              <table-calc field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Calculation_3491697154640744450]' ordering-field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Suburb (pedestrian_monthly_by_suburb.csv)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_3491697154642599943]' derivation='User' name='[usr:Calculation_3491697154642599943:qk:19]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Path (bin)]' ordering-type='Field' />
              <table-calc field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Calculation_3491697154642485253]' ordering-field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Path (bin)]' ordering-type='Field' />
              <table-calc field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Calculation_3491697154640621569]' ordering-field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Suburb (pedestrian_monthly_by_suburb.csv)]' ordering-type='Field' />
              <table-calc field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Calculation_3491697154640822275]' ordering-type='Field'>
                <order field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Path (bin)]' />
                <order field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Suburb (pedestrian_monthly_by_suburb.csv)]' />
              </table-calc>
              <table-calc field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Calculation_3491697154640367616]' ordering-field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Suburb (pedestrian_monthly_by_suburb.csv)]' ordering-type='Field' />
              <table-calc field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Calculation_3491697154640744450]' ordering-field='[federated.0dudxf80jcq2u31emq2321tgphwg].[Suburb (pedestrian_monthly_by_suburb.csv)]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dudxf80jcq2u31emq2321tgphwg].[mn:Month:ok]'>
            <groupfilter function='level-members' level='[mn:Month:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2226748609236152320:nk]' member='&quot;Attraction&quot;' />
              <groupfilter function='member' level='[none:Calculation_2226748609236152320:nk]' member='&quot;Restaurant&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[mn:Month:ok]</column>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]</column>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_2' value='#00000000' />
            <format attr='fill-color' id='annotation_3' value='#00000000' />
            <format attr='fill-color' id='annotation_4' value='#00000000' />
            <format attr='fill-color' id='annotation_5' value='#00000000' />
            <format attr='fill-color' id='annotation_6' value='#00000000' />
            <format attr='fill-color' id='annotation_7' value='#00000000' />
            <format attr='fill-color' id='annotation_8' value='#00000000' />
            <format attr='fill-color' id='annotation_9' value='#00000000' />
            <format attr='fill-color' id='annotation_10' value='#00000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0dudxf80jcq2u31emq2321tgphwg].[mn:Month:ok]' value='Month'>
              <formatted-text>
                <run>Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb (pedestrian_monthly_by_suburb.csv):nk]' />
              <path column='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Path (bin):ok]' />
              <tooltip column='[federated.0dudxf80jcq2u31emq2321tgphwg].[sum:HourlyPedestrians:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Path (bin):&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Path (bin):ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Suburb (pedestrian monthly by suburb.csv):	</run>
                <run bold='true'><![CDATA[<[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb (pedestrian_monthly_by_suburb.csv):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Hourly Pedestrians:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dudxf80jcq2u31emq2321tgphwg].[sum:HourlyPedestrians:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</rows>
        <cols>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</cols>
        <show-full-range>
          <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[Path (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-24'>
            <formatted-text>
              <run bold='true' fontcolor='#ffffff' fontsize='9'>Southbank</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1.2934204613138185'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-6.6323257088819858'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='8.6823199900779606'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-9.1449702815720606'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#ffffff' fontsize='9'>South Wharf</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-4.1974131334558642'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-6.8607479427629006'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1.7001488757412009'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-9.2972517708260032'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='4' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#499894' fontsize='9'>North Melbourne</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-9.8238228663680101'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-3.1298514560412727'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-3.3161682355298669'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-5.7186367733583197'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='5' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#ffffff' fontsize='9'>Melbourne</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-11.044008109650163'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1.2863117323230995'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-4.1974131334558642'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-1.0740513511130327'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='6' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#499894' fontsize='9'>Kensington</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-9.4170944519406259'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5.4740526868065587'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-2.1637710613189451'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3.1898303479974039'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='7' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#ffffff' fontsize='9'>East Melbourne</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-4.269425954707172'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='8.2677493565191433'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2.2165288126605756'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5.7387118756374207'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='8' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#ffffff' fontsize='9'>Docklands</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-0.062340920110795395'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='6.2354601330762804'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='6.5808898488698091'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3.7989563050131778'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='9' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#ffffff' fontsize='9'>Carlton</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2.0390892210973561'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2.8852673694895117'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='7.055406332368424'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.44876354142640906'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='10' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#499894' fontsize='9'>West Melbourne</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='3.4626386715932007'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-0.46492539409725353'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='10.241445578716267'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642522118:qk:19]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-2.9014292221603579'>
                  <node-reference>
                    <axis>[federated.0dudxf80jcq2u31emq2321tgphwg].[usr:Calculation_3491697154642599943:qk:19]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{78DBE9B0-14A3-4351-A5D9-6B47017B5D25}' />
    </worksheet>
    <worksheet name='Top 5 Restaurants'>
      <table>
        <view>
          <datasources>
            <datasource caption='landmarks_restaurants+' name='federated.0dudxf80jcq2u31emq2321tgphwg' />
          </datasources>
          <datasource-dependencies datasource='federated.0dudxf80jcq2u31emq2321tgphwg'>
            <column caption='CategoryGroup' datatype='string' name='[Calculation_2226748609236152320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(LOWER([Type]), &quot;restaurant&quot;) THEN &quot;Restaurant&quot;&#13;&#10;ELSE &quot;Attraction&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Rating]' role='measure' type='quantitative' />
            <column datatype='string' name='[Suburb]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2226748609236152320]' derivation='None' name='[none:Calculation_2226748609236152320:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Suburb]' derivation='None' name='[none:Suburb:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rating]' derivation='Sum' name='[sum:Rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2226748609236152320:nk]' member='&quot;Attraction&quot;' />
              <groupfilter function='member' level='[none:Calculation_2226748609236152320:nk]' member='&quot;Restaurant&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MIN([Rating])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;+39 Pizzeria&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;11 Inch Pizza&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;1806&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;1932 Cafe &amp; Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;3 Brothersss Indian Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;400 Gradi&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;A Hereford Beefstouw&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;A25 Pizzeria CBD&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Abla&apos;s&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Afternoon Tea at The Hotel Windsor&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Aix Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Amaru Melbourne Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;American Doughnut Kitchen&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Anada&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Andrew&apos;s Hamburgers&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Arbory Bar &amp; Eatery&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Archie&apos;s All Day&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;At Ease - Easy Thai&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Atrium Bar On 35&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Atta Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Auction Rooms&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Avatar Indian Cuisine&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Axil Coffee Roasters&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;B&apos;Churrasco Brazilian BBQ&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bacash Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bamboo House Chinese Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bangkok Jam&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bar Lourinha&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Becco&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Beer DeLuxe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Berth&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Betty&apos;s Burgers&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Betty’s Burgers &amp; Concrete Co&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bistro La Provence&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bistrot d&apos;Orsay&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Black Pearl Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Blue Chillies&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bomba&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Boosa&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bottega&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bowery to Williamsburg&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Box Seafood Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bratwurst Shop &amp; Co&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Brick Lane Melbourne&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Brighton Soul&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Brother Baba Budan&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Brunetti Classico - Carlton&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Brunetti Oro Flinders Lane&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Byblos Bar &amp; Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ca de Vin&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cafe Andiamo&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cafe Cavallino&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cafe Excello&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cafe Issus&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cafe Keyif&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cafe Rosco&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cafe Segovia&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Caffe e Torta&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cargo Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Carlton Curry House&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Carlton Wine Room&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Carosello&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Caterina&apos;s Cucina E Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cecconi&apos;s Flinders Lane&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Centonove&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cherry &amp; Twigs&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chiba Japanese Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chin Chin&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;China Red&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chocolate Buddha&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chokolait Hub&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chuckle Park Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;City Wine Shop&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Claypots Barbarossa&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Coda&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Code Black&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Collins Kitchen&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cookie&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Corner &amp; Bench&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cornish Arms Hotel&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Crossways Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cumulus Inc.&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Curry Vault Indian Restaurant and Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;D.O.C&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Da Guido 365&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Da Guido La Pasta&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Daughter in Law&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;David&apos;s Master Pot (Elizabeth St - CBD)&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Delhi Streets Indian Street Food&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dip In Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dish &amp; Spoon&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;DOC Pizza &amp; Mozzarella Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;DoDee Paidang Thai Bar and Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Don Don Japanese&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Donnini&apos;s Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dukes Coffee Roasters&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dumplings Plus&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dunyazad&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Eau De Vie&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Elephant and Wheelbarrow&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Eliana Lulu&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Embla&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Encore Bar and Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Epocha&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Esca Grill&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Estelle&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Fifteen Pounds Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Fiorelli&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Flora Indian Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Flower Drum&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Foglia di Fico&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Fonda Mexican&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Franco-Belge&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;French Saloon&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ganache Chocolate&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Garden State Hotel&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;George Street Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Geppetto Trattoria&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gimlet At Cavendish House&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gin Palace&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ginger Olive Restaurant and Grill&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gingerboy&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ginza Teppanyaki&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Giro d&apos;Italia&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gopal&apos;s Vegetarian&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gordon&apos;s Cafe &amp; Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gourmet Curry Hut&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grand Trailer Park Taverna&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grill Steak Seafood&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grill&apos;d Degraves St&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grill&apos;d QV&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grossi  Florentino&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hakata Gensuke Ramen&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Half Moon Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hawker Boys&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Higher Ground&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hochi Mama&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hofbrauhaus&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hooks At The Yarra&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hopetoun Tea Rooms est. 1892&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hot Poppy&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;HQ&apos;s On William&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Humble Rays&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hutong Dumpling Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ides&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Il Bacaro Cucina e Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;IL Dolce Freddo&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Il Duca&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Il Gambero&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Il Solito Posto&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Indian Palace Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Isan Soul Thai Street Food&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ish Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Izakaya Den&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Japanese Teppanyaki Inn&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jim&apos;s Greek Tavern&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jinda Thai&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Juicy Bao&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jungle Juice Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kazuki&apos;s&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kenzan Japanese Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Khao San Road&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kirks Wine Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kisume&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kiwi Fish &amp; Chips&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Koko Black&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Koko Black Chocolate&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kri Kri&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;La Belle Miette&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;La Luna Bistro&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;La Petite Creperie&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;La Spaghettata&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Laksa King&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Laurent Bakery&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Le Bon Ton&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Le Petit Gateau&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Le Petite Bourke&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lee Ho Fook&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Little Africa&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Little Billy&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Little Black Pig &amp; Sons&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Little Cupcakes&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Little Ramen Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Little Tommy Tucker Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Little Vietnam 504&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Locanda Restaurant &amp; Public Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lolo and Wren&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Longrain&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lord Cardigan&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lucy Liu Kitchen and Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lune Croissanterie&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lupino Bistro and Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Maccaroni Trattoria Italiana&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Madame Brussels&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Magic Mountain Saloon&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Maha&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mahn Doo&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mamak&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mamasita&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Manchester Press&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Marion Wine Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Marios Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Massi&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Matteo&apos;s&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Max Bar Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Meatmaiden&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mediterraneo Charcoal Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Melbourne Hwaro Korean Barbecue&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mercadante Woodfired Pizzeria&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Merchant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Metro Burger&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mezzo&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Milk the Cow&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mister and Miss Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mister Bianco&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mitre Tavern Steakhouse &amp; Grill&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mjolner&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Moroccan Soup Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;MoVida Aqui&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Movida Bar de Tapas&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;MoVida Next Door&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mr Huang Jin&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Naked for Satan&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Naked in the Sky&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nevsky Russian Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nine Elephants&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nirankar Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;No35&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Oak &amp; Vine&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Om Nom&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ombra Salumi Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;One Eleven&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Operator 25&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Oriental Spoon&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Oriental Tea House&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Osteria Ilaria&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pacinos Italian Family Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Palermo&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Papa Gino&apos;s Pizza Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Paris Go Bistro&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pascale Bar &amp; Grill&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;pastuso&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Patricia Coffee Brewers&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pellegrini&apos;s Espresso Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Phancy Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Philhellene&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Philippe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pho Bo Ga Mekong&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Piccolo Mondo&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pidapipo Gelateria&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pilgrim Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pinchy&apos;s&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Plain Sailing&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ponyfish Island&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pope Joan&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Postmaster Hotel&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pretty Boy Italian Steakhouse&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pud Thai vs Pho&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Punch Lane&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;QT Kitchen&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Radii Restaurant &amp; Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rare Steakhouse Downtown&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rare Steakhouse Midtown&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rare Steakhouse Uptown&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Red Pepper Indian Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Red Spice Road&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Restaurant 1903&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ricardo&apos;s Trattoria&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rice Paper&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rice Paper Scissors&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Richmond Oyster&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Riverland&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rocket Burger &amp; Fries&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rosa&apos;s Canteen&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rosco&apos;s at Chevron Cafe Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Roule Galette Melbourne&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Royal Stacks&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rumi Brunswick&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ruyi Modern Chinese&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Saint &amp; Rogue&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Saint Crispin&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sake Restaurant &amp; Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sakura Kaiten&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sally&apos;s Kitchen and Winebar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;San Telmo&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sapa Hills Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Saxe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Scopri&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Scugnizzo&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;seamstress&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Seasons Provedore&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Seedling Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Self Preservation&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Seven Seeds&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sezar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shakahari Vegetarian Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;ShanDong MaMa&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;ShanDong MaMa mini&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shanghai Street&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shark Fin Inn&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shoya&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shujinko&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Simply Spanish QVM&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sir Charles&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Smith and Daughters&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sons of Mary&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sosta Ristorante&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Spaghetti Tree&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Spicy Korea&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;SPQR Pizzeria&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Spring Street Grocer Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stalactites&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Station Hotel&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Straight Outta Saigon&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Straits Cafe Melbourne&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sud Food and Wine&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sunda&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Supernormal&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sushi Hub Swanston&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Swaad India&apos;s Zest&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Taxi Kitchen&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tazio&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ten Square Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Terra Rossa Restaurant &amp; Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Thai city&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The  European&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Abyssinian&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Bank on Collins&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Crafty Squire&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Crane Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Essence&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Fitz Cafe &amp; Rooftop&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The French Brasserie&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Grain Store&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Hardware Club&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Hardware Societe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Hof Downtown&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Irish Times Pub&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Jazz Corner Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The League of Honest Coffee&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Louden Kitchen &amp; Grill&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Lui Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Meat &amp; Wine Co Hawthorn East&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Meatball and Wine Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Moat&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Pancake Parlour&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Point Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Quarter&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Recreation bistro x bottleshop&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Sherlock Holmes&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Tippler &amp; Co&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;The Vegie Bar&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Three Bags Full Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tiamo&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tim Ho Wan&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tipo 00&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tokui Sushi&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tonka&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Top Paddock&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Transformer Fitzroy&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Trattoria Emilia&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Triim Food &amp; Drink&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Trunk&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tsindos-The Greeks Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tulum Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Uncle Collins Street&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Universal Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;University Cafe&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vaporetto Bar &amp; Eatery&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vertue Coffee Roasters&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vespa Rossa&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Viet Kitchen&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vivace&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vue De Monde&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Waiters Restaurant - Italian Waiters Club&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Walkers Doughnuts&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;White Mojo Speciality Coffee &amp; Roaster&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;White Rabbit&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Windows Restaurant&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Yeonga Korean BBQ&quot;' />
                  <groupfilter function='member' level='[none:Name:nk]' member='&quot;Young and Jacksons&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]</column>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]</column>
            <column>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Name:nk]</rows>
        <cols>[federated.0dudxf80jcq2u31emq2321tgphwg].[sum:Rating:qk]</cols>
      </table>
      <simple-id uuid='{CD0E5495-67F8-4C5C-A6DE-9915FE859A8D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='610' maxwidth='1080' minheight='610' minwidth='1080' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource caption='landmarks_restaurants+' name='federated.0dudxf80jcq2u31emq2321tgphwg' />
      </datasources>
      <datasource-dependencies datasource='federated.0dudxf80jcq2u31emq2321tgphwg'>
        <column caption='CategoryGroup' datatype='string' name='[Calculation_2226748609236152320]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF CONTAINS(LOWER([Type]), &quot;restaurant&quot;) THEN &quot;Restaurant&quot;&#13;&#10;ELSE &quot;Attraction&quot;&#13;&#10;END' />
        </column>
        <column datatype='date' datatype-customized='true' name='[Month]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Suburb]' role='dimension' type='nominal' />
        <column-instance column='[Month]' derivation='Month' name='[mn:Month:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Calculation_2226748609236152320]' derivation='None' name='[none:Calculation_2226748609236152320:nk]' pivot='key' type='nominal' />
        <column-instance column='[Suburb]' derivation='None' name='[none:Suburb:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97378' id='24' param='horz' type-v2='layout-flow' w='93728' x='3167' y='1311'>
            <zone h='97378' id='5' type-v2='layout-basic' w='93728' x='3167' y='1311'>
              <zone h='97378' id='3' name='Map' w='53429' x='3167' y='1311'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27428' id='12' name='Find Top 10 Restaurants' w='36517' x='60378' y='1311'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='66428' id='13' name='Pedestrain' w='36517' x='60378' y='32261'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3522' id='14' type-v2='empty' w='36517' x='60378' y='28739'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='97378' id='15' type-v2='empty' w='3782' x='56596' y='1311'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='97378' id='26' type-v2='empty' w='2364' x='96895' y='1311'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='97378' id='27' type-v2='empty' w='2426' x='741' y='1311'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='10000' id='8' mode='checkdropdown' name='Map' param='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]' type-v2='filter' w='10741' x='45093' y='11967' />
        <zone h='7213' id='22' mode='checkdropdown' name='Map' param='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]' type-v2='filter' values='database' w='10648' x='45185' y='21967' />
        <zone h='7377' id='25' mode='checkdropdown' name='Pedestrain' param='[federated.0dudxf80jcq2u31emq2321tgphwg].[mn:Month:ok]' type-v2='filter' values='database' w='10463' x='88148' y='41311' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='59' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97378' id='58' param='vert' type-v2='layout-flow' w='98518' x='741' y='1311'>
                <zone h='10000' id='8' mode='checkdropdown' name='Map' param='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]' type-v2='filter' w='10741' x='45093' y='11967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7213' id='22' mode='checkdropdown' name='Map' param='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]' type-v2='filter' values='database' w='10648' x='45185' y='21967'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97378' id='3' is-fixed='true' name='Map' w='53429' x='3167' y='1311'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='159' h='27428' id='12' is-fixed='true' name='Find Top 10 Restaurants' w='36517' x='60378' y='1311'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7377' id='25' mode='checkdropdown' name='Pedestrain' param='[federated.0dudxf80jcq2u31emq2321tgphwg].[mn:Month:ok]' type-v2='filter' values='database' w='10463' x='88148' y='41311'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='66428' id='13' is-fixed='true' name='Pedestrain' w='36517' x='60378' y='32261'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2E0E7F72-28DE-47BD-A005-327D1580F61A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]' type='filter' />
            <card param='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Type:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Address:nk]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Name:nk]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:NumberOfReviews:ok]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:PriceLevel:nk]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Rating:ok]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:SubType:nk]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B65B66EC-1741-4522-B30F-CA4C6D0097DA}' />
    </window>
    <window class='worksheet' name='Top 5 Restaurants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Calculation_2226748609236152320:nk]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Name:nk]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:RankingPosition:ok]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Rating:ok]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B70C3D3E-73B7-4AA3-AB74-B3B7EBEF3C7E}' />
    </window>
    <window class='worksheet' name='Pedestrain'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dudxf80jcq2u31emq2321tgphwg].[mn:Month:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb (pedestrian_monthly_by_suburb.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Month:nk]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Path (bin):ok]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb (pedestrian_monthly_by_suburb.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1964EE73-E6B8-4C67-A570-0E6A767121B3}' />
    </window>
    <window class='worksheet' name='Find Top 10 Restaurants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Suburb:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Address:nk]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Name:nk]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:PriceLevel:nk]</field>
            <field>[federated.0dudxf80jcq2u31emq2321tgphwg].[none:RankingPosition:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1D10EFE-9E97-4E04-A805-0CC50147B520}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Find Top 10 Restaurants' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight field='[federated.0dudxf80jcq2u31emq2321tgphwg].[none:Type:nk]' type='shape'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Pedestrain'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{19C8DCAC-128E-4129-9FAD-A770390AA497}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      Z7zT+B8UAplsflx42QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Find Top 10 Restaurants' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Pedestrain' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='179' name='Top 5 Restaurants' width='192'>
      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
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='MyCustom1/Church.png'>
        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
        4rn9B0xUWCMMgfKDAAAAAElFTkSuQmCC
      </shape>
      <shape name='MyCustom1/hospital.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAACXBIWXMAABJ0AAASdAHeZh94
        AAACAElEQVR4nO3csUrDQBwG8C+hD9AK7pn7BFLEVQcH20mcnJRONSA4dHYQhOIkdnISJ9uH
        ECfnbkJ2wfoGOjRokxq+pHeXRPh+W6C9XD/+uev/oPV2z/bh2uXJzQGAEYDA0pARgHA4Hkwt
        jZfJd32DOJwJ7IWDeKxJPLZTDdc3wKJyqNbhaeJ6/niXd2ynVeS8gmC3csocG0A5Af1rCohQ
        QIQCIsrYxRLSu1XR1+Xc3axRBREKiFBAROlrUNYasuY3aedUQYQCIhQQoYAIBUSUvotlqcuu
        laYKIjwbZ9K9Tt/2mbOpCED49HJrfNpoXEFxOLbPnE0FACbx3IzYeMRynTlXxHhuRgH1Ov0m
        6lU5aYHpAA3AbA3Z29kynYNrX2u8J0K8hjWW1hD5FWCxhnV91HsNqdrIR73XkKoF3uvsbZ1n
        9MfmRjNxff7sGc3I1PV28uO8f3wajadv0oQCIhQQsdLNX81ahQZIP/N1U/TzXLTniWtVEKGA
        CAVEWD9RrPuaVJQqiFBAhAIi1IsRqiBCAREKiFAvlqJerCAFRCggQr0YoQoiFBChgAj1YoQq
        iFBAhAIi1IulqBcrSAERCohQL0aogggFRCggwnovluXofmZymxUPx+1cr1Mv5pgCIhQQoYAI
        H4sfbsjfIh9AWPUsaiz047/a60KVtCwC0B2OB9NvLgt/KoaMSusAAAAASUVORK5CYII=
      </shape>
      <shape name='MyCustom1/leisure.png'>
        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
        gg==
      </shape>
      <shape name='MyCustom1/mixeduse.png'>
        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
      </shape>
      <shape name='MyCustom1/office.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAACXBIWXMAABJ0AAASdAHeZh94
        AAACMElEQVR4nO2bMUvDQBiG3wR/gIjg4tA/IIi7IC5dOliE0lWwuFiwoJOzU4UO7SIRXIsg
        9heI4i6Cq0MGF0HE/gIdbMGkiW/TXu5aeJ/tete7rw/fXe6S1CselSDS8V0HMOtIEEGCCBJE
        kCDCgsvB29XaDoAWgEJKkxBAo94NerZiiuMsgwZybpEuB4O620FbJ7icYq2c2hrFiaB2tbaI
        /zMnTpa2RnGVQZmnjKtpZl3Q4IdeTfBVJ2uRiwyaZj2xvhZZFTTB2hNnmu9OhPV90OnbZqR8
        tvqY6XMgyC22JKxmUL0bfNkczwQ6ahAkiOAl3VEc44zECBE7Q7Wrte8J+0qk3g28P30bj3fI
        SAaNeUZiFGBp35J3vElTzORew8a+Jdd4kwQVDA5osi8bY4z05RWPSrg+PJl2DlPeP8xe4VeW
        F432FyME0Kh0mj2v//ownMO5MmeChpR9OLzXMge0fDi81zIHFLRRJEgQQYIIEkRw9lxs734p
        Ur7a+sxUbwtlEEGCCBJEGFmD9p/XIuXL9Rej9abJO15lEEGCCBJEkCCCBBEkiCBBBAkiSBBB
        gggSRJAgggQRJIggQQQJIkgQQYIIEkSQIIIEESSIIEEEr//6YPT95TTm9BU8ZRDD2ZNVU293
        6MmqYySIIEEEXcUIyiDCyFXs5OIuUm4ebButH3J+8xQpH+9uZKq3Fa8yiCBBBB+/f/0RyYQ+
        gIbrKGaYhl/pNHsAylAm/SUEUK50mr0fcgixa//2S68AAAAASUVORK5CYII=
      </shape>
      <shape name='MyCustom1/residential.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAACXBIWXMAABJ0AAASdAHeZh94
        AAADOElEQVR4nO2bP2hTQRzHvzG+PRmCUoQ0JRSxINUsLVhJKdKADnYRpUuc/INgRjfp5pZF
        lE6Nk9CluNVBDEXQRYeCixRrsRBpkNoq/sXUIbkSLu+938vL3buL/X0ghPzuXu73Pty7P+k1
        Nl26AMabQ6YTsB0WRMCCCKwRlHZy5bST22u9yqbzEVghKO3kFgCU2kKlVsw4xgW1RBRdioo2
        SDIqyEeOwLgkY4ICyBEYlWREkJec8ZEUxkdSbpcYk3Q46gb95BQLQ/ufX76ty1WKaSeHjT+v
        r2pNUCKeHRuOrLGgckazSXze/Y3N+ne56mgiPjC406g90ZpoG5EJCipHYIukUI/YlfurgwDK
        ABJS0aPHt05W5PrdyhGIMpOPW9gxqAjgokdZpf1DWDn7DRmWpHUW61WOoFgYMja7aROkSo7A
        lCQtglTLEZiQpFyQLjmCqCUpXSiuTU/k3eKq5ARA+cCtrAetTU9g60S2I65aTmX5vduM1o7S
        nqREkEVyBMok9SzItBzdG9yexiAb5Oje4IbuQbbJ0TW7hdqs/jw1efvrwJHjctyUHIGODW7X
        gtJObqHhOJfluGk5AtWSuhKkexEoCCtHoFJSYEH9IkegSlIgQf0mR6BCEimo9VfO63JctZzF
        5xtYWd3qiPfaDiEpsdOoPfW7Psg0X5IDOvZWz9586ohFsMHtuDeZrtdBUW08VbfjI8kX8hFL
        xAdiAPIAMHX6KGbPZcLkRxKLxfDu4y4AYGp4C7Pnx5S3MZpN4sevv1ivfROhuZ1GreqbV9AT
        Zst3bu4FqXfphf+NLZ555f8Fmw+b78du6GsDQOHegxhZCRYcXrAdFkTAgghYEAELImBBBCyI
        QPn5oCBrkH5oQ8A9iIAFEbAgAhZEwIIIWBABCyJgQQQsiED5Snplbt63/Ozdaz23oeIXxaBw
        DyJgQQQsiIAFEbAgAhZEwIIIIv+PQxXwL4oWwYIIWBCB6+mOVGY7AWAJrWMvB4AqgJn6evKL
        XODVgw6SHKB5r0tuBV6C8roysZh8KrM9KAd5DGqjvp78IMe8BFW1ZmInVbegl6AZrwv+U6po
        3nMHrivp1mg+qTGhvoHHIIJ/6PxmBuHFDr4AAAAASUVORK5CYII=
      </shape>
      <shape name='MyCustom1/restaurant.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAACXBIWXMAABJ0AAASdAHeZh94
        AAACuUlEQVR4nO2cMXIaMRSGPzI5AEfgCLjdJqFKk4LsCXC5VXwD7BMkVFsmJ1icG5BmW3ME
        jrA3SAoUhjDGTxJ6MvK8r9oBoV98o9Vql2ePPt19JoS6asbAGvjoXtoAX7q+HTTbeY5tCnw7
        6gtgAFZd396H9gfwLuIzx18Gd7zO0O5F6qpZAE8nfQGMgWVdNU+hfUKcoNMB5HrtLG7m/BCa
        TeuquQ/pF+IEXRVHp6gPX0P7L14QsAQmnm3HoZ0XLaiumglwp5lRtCD2s0eVYgW52bPQzilW
        EBELbgwlC1rkCClSUF01cyKuSDEUKQj4kCuoVEHzXEHFCXJXr0muvOIEAdOcYSZIoERB2RZo
        KFNQlsv7P0oUZKfYNWGCBIoS5PZAWQkS5B5vnntv/txxbLvn6Pp2F9I+Be8T9rWsq+ZwnKDd
        VRAkqOvb4ejLnTLF7+G5b7urIGYN2qUexCtleBEjaJN6EK+U4UWMoN/JRxGWscmQfyBYUNe3
        P9n/3q3F4DKugth90CrpKML6zjGDD8QK+o7OLBpc3y+xU8g9S5QgV5qiMYtWHmUvW4Xcs0Tf
        arh6m5SD3frU8HR9u0V3DfyPS+/FZqQZ7OD68mWTINOLiwS50+GGy2bSFrgJrCj7dUFeEBff
        zbsbyBnwQNhs2rnPzCJuQh8D20czCq1RlKir5o9Pu65vRxfmrIn4fSw0t6jnQSdo7sUOFCuo
        69sNGRbrYgU5blG+5BctyC3ut5oZRQsC6Pr2kf1WQ4XiBcFhd63CmxCkiQkSMEECJkjABAmY
        IAETJGCCBEyQgAkSMEECJkjABAmYIAETJGCCBEyQgAkSMEECJkjABAmYIAETJGCCBEyQgIYg
        n2ICrQrZ5LkagnzqdlQqZDVyk1eYAbh/qHbub0u3Xd+qFBto5KqsQW4gpzWLA/CgJUcr9y/m
        qLlVYkxmKwAAAABJRU5ErkJggg==
      </shape>
      <shape name='MyCustom1/retail.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAEmElEQVR4nO2aP2gbVxzHv2cb26GBGpyUEEIQCLvNIJC24KE5d6mGBFK0Xp3T2iVZOkfu
        2KXuojHnQYspIlahcFCQFbwGJHdqCAjhlkKooaqhjSJSXwe9E9K79+53pz+Wht8HQuz7vfd7
        z597f342Mj5/ch/jUE7U0gAeArgHwNQ0qwF4AeAw1zIbYw14yRijCionajaAxwDSMbs2AHyf
        a5n7Iw18ycQWVE7UEgAc6FdLVGoA8rmW2Rozz1RZiNO4nKg9BFDH+HIgctRFzrkl8goSW8oJ
        aXKI3jkjnzFp9M6nMBH5ed1ykQSJt/xcE94FsJdrmW0ixxqAJwCeapp8kWuZh+RkLhlSkDhz
        6gDWpFADvTcf61YSt56D4OHeBpCZtzMpyhnkQC1ne5QrW/TZRnArriF8C8+EUEHi3DGlx76c
        0C0VhuirkmSKMecGagU9VjzLjyPHR+TIRxxzZmjPIHFW1KXHu7mWWZjkBMqJWgHBgzuj276u
        ZcSq3LMlb6zKPWwFqa7lvXEG06DKGRjbtQzbtYw6ei/tKcJrMVO0qbuWUXctwx51cmGC7knf
        H05ia8mInPL13h/btYyEaxlHUN98UUgDcFzLOHItIxG3c5ggU/r+RdzkMZBzmwDgWsbEK3eR
        MzJLMdpO87fwQG6xLSZdua8BeO5aRj5b8vajTCyOoEtjcf0aoJezC2AvW/J0270GYM+1jLDK
        3XEto50teWTl3t9ixWqnXqx25IIQAHB+nMSbZ3e/08WL1Y5TrHa0b5uKv3l299H5cRIAYKyu
        YmXjjqpZA0AmW/IKIXL6ZEteO1vyCgAyUK9+J8qZNHgGpQEcyRLOj5N4+/q6Ni5+cBuArZIQ
        Nf729XWcHyexsnEHxtLwwu6eXgDA9ihXtugzcuUuH9JDEgbkKOMDP7zPkIS48aWPbmDxw+FF
        2j29wB/fdhFl1egQfZWVO1UC9AvFYrXjDTxvXNn4My3JGaQh/umS74v/Y8VvFVawfHv4nf1e
        eIfu6QW++mzV0E0mKqLIlIvfRrbkZXR9dNd8mBygt5LskLgdN758eyEg56/Ke397TQSx3Xal
        x2khTkmsvyhOkw8yi4Fnf//8fhpDRarcfeZG0JVPhqfyT/0/XPzraVqPjjiPtJW7zNwIWv14
        eCqdXye3tRQoK3cVcyNIpvvbVAVFLhfmVtC8MDNBP9zM4d3CsjJ2UNnCT2efavummjtOqrmj
        LfKo+NfffPnooLIVmt//emaCzpbX8eONBwFJB5UtvDxJ4tXVTVSvmYF+YvI2AFslIWr85UkS
        KkkD/QHMeIvJknw5PrIkefKQJMSNy5IU/Wf/27wv6ZdKe0iOz6urmwCAVHMzMHmBnWru9L+O
        G/fHTDWTyvwzFwT0JJ2drGvjQpIdkiIsRsaFJGUbvsUIWBABCyJgQQQsiIAFEbAgAhZEwIII
        WBABCyJgQQQsiIAFEbAgAhZEwIIIWBABCyJgQQQsiIAFEbAgAhZEwIIIWBABCyJgQQQsiIAF
        EbAggv7ngybxUf84pJqY/IegpwCvIAIWRMCCCFgQAQsiYEEELIiABRGwIIL/AeOTv1kP+iBE
        AAAAAElFTkSuQmCC
      </shape>
      <shape name='MyCustom1/school.png'>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAEHUlEQVR4nO2ZQWjbVhjH/3aEq2FTi6ZYpnYhwyQmCSVNA80CPQ7iwwrNBjvstEsGu809
        7LhBT2WH9bYddi07FEpyXMfoKZAF2qZhJMErJoY6IJt02JsNqpHtHZK2keTqs/0kS4Hvd7Ke
        n7739POnZ31PoeVvPgHF0oWlWwDuAZggO4+GEoD85j+b614PFKY6nMhZQ3DkAMdzWTuZm6eQ
        gnCcOUHF87k5Clq6sKQgWJljZcLrASSnL7//at7r8YXJ3d30NL5jBuXu/lTzdPQzgGMGiXJ4
        1Eb5VRvVWhv//vobjIePjgf9bBnnv8ghoYwhPT6G1MUxL6chhCeCqrUOtgqv0dS7b9veyHnz
        ufnpMg40AweagagcwmL2HBJKP/8Zo8X1GW0XW3i8o5vkUDT1Lh7v6NguttyejjCuCtoqtFAo
        G0OfXygb2CoES5JrgraLLRxodjlJVcXc3BVb+9zcFSRV1dZ+oBmByiRX1qBqrWPLHFmWMTsz
        jVgs2vMcJR6HEo8jlbqE3b196Lr+9rtC2UBqXArEmuTKDLYKr03Hsixj4drV98o5TSwWxcK1
        q5Bl2TGmXwgLOjxq2xbk2ZlpSFL/ySlJEmZnpk1tTb2Lw6O26PSEERZUfmW+iKSq9pU5VmKx
        qG1Nssb2A2FB1Zr5ItRkYuhY1nOtsf1AeJG23l5KPN7Xeb9fvm5ry9xeBRbe3WqDPEt5hf9/
        E6co/viLrc1vSYES1IuoHPJ1/JEJytxedaXPqBFeg6JyyHQb1Or1nutQJr+KTN5ZQK1eR3nn
        L1NsvxHOoIRi3qqoaNWhY1nPtcb2A2FB6XHzRWiVChqN5sBxGo0mtErFMbYfCAtKXRyz3Qq7
        e/swjP6resMwsLu3b2qLyqFAbKS5skgvZs+ZjnVdx9Nnz/vKpEajiafPnpuK1V4x/cKVaj6h
        hJFNS6aK/ljSNpKqCjWZsC3ctXodFa1qu60AIJsORiUPnAia6kwKvzmdz0TQMmDbE9IqlZ4S
        3seHSQnzmUjf/ac6k148SZYA5P8Ov1iXTuSsuRF1MRtBRMLQu4rZ9GByPGQCwNpUZ3JFgstv
        J+czEaTGJdumvRMB3rS/J8GDt5MJJYybix+YXvtYZUXl0Fl47TMR6j656fwzp78e0VyGpPyz
        p+EDl9NBgwURsCACFkTAgghspcaNP741HW98+Z/p+PONjxwDPrjx50j7W+drZePjH4T6cwYR
        sCACFkTAgghYEAELImBBBFzNE3AGEbAgAhZEwLUY0Z8ziIAFEbAgAhZEwIIIWBABCyLgWoyA
        M4iABRGwIALPa7HMdy8d+xfvXBaKz7WYz7AgAhZEwIIIWBABCyJgQQSe12KDPgcNzAhqsZKn
        I5xtSmEAeb9nEWDy4dz97jqAFXAmnaYEYCV3v7v+P3eMcwclXOHKAAAAAElFTkSuQmCC
      </shape>
      <shape name='MyCustom1/transport.png'>
        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
      </shape>
    </shapes>
  </external>
</workbook>
